
<html>
  <head>
    <title>deegree Feature Info</title>
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8'></meta>
  </head>
  <body onload="loaded()">
    <script type="text/javascript">
      var headerStyle = 'font-family: Verdana, "Times New Roman", Times, serif; font-size: 110%; font-weight: normal; font-style: italic; background: #c1cde5; text-align: left;'
      var oddStyle = 'background-color: #ffffff;'
      var evenStyle = 'background-color: #D9E8FB;'
      var first

      function loaded() {
        var sw = document.getElementById('theswitch')
        var opt

        
opt = document.getElementById('DominantVegetation')
if(!opt){
  opt = newnode(sw, 'option', 'DominantVegetation')
  opt.setAttribute('id', 'DominantVegetation')
  opt.setAttribute('value', 'DominantVegetation')
}



        first()
        sw.value = sw.options[0].value // why're they counting from 0 here, and not from 1?
      }

      function addText(node, text){
        if(!node.ownerDocument) node.ownerDocument = document
        node.appendChild(node.ownerDocument.createTextNode(text))
      }

      function newnode(node, name, text){
        if(!node.ownerDocument) node.ownerDocument = document
        var n = node.appendChild(node.ownerDocument.createElement(name))
        if(text) addText(n, text)
        return n
      }

      var tags = ["p", "a", "td", "tr", "th", "h1", "h2", "h3", "h4", "h5", "h6", "ul", "ol", "li", "table", "tbody", "b", "br", "i"]
      // beware of the scope...
      for(var tag in tags) {
        this[tags[tag]] = function(x){
          return function (node, text){
            return newnode(node, x, text)
          }
        }(tags[tag])
      }

      function dotheswitch() {
        this[document.getElementById('theswitch').value + "_switchfunction"]()
      }
      
if(! this.DominantVegetation_switchfunction){
  this.DominantVegetation_switchfunction = function(){
    var div = document.getElementById('table')
    while(div.firstChild) div.removeChild(div.firstChild)
    var table = this.tbody(this.table(div))
    var row = tr(table)
    th(row, "Field").style.cssText = headerStyle
    th(row, "Value").style.cssText = headerStyle
    for(var i in DominantVegetation){
      row = tr(table)
      td(row, 'GML ID').style.cssText = headerStyle
      td(row, 'DOMINANTVEGETATION_329').style.cssText = headerStyle
      DominantVegetation[i](table)
    }
  }

  DominantVegetation = []
}

DominantVegetation[DominantVegetation.length] = function (table) {
  var odd = true
  var row
  
row = tr(table)
td(row, 'objectid').style.cssText = odd ? oddStyle : evenStyle
td(row, '330').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'code').style.cssText = odd ? oddStyle : evenStyle
td(row, '202').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss1').style.cssText = odd ? oddStyle : evenStyle
td(row, 'B1').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss2').style.cssText = odd ? oddStyle : evenStyle
td(row, 'A1').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss3').style.cssText = odd ? oddStyle : evenStyle
td(row, 'B6').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss4').style.cssText = odd ? oddStyle : evenStyle
td(row, 'a2').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss5').style.cssText = odd ? oddStyle : evenStyle
td(row, 'a6').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss6').style.cssText = odd ? oddStyle : evenStyle
td(row, 'b3').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss7').style.cssText = odd ? oddStyle : evenStyle
td(row, 'b4').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss8').style.cssText = odd ? oddStyle : evenStyle
td(row, 'b7').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss9').style.cssText = odd ? oddStyle : evenStyle
td(row, 'b8').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'ss10').style.cssText = odd ? oddStyle : evenStyle
td(row, 'b17').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'lab').style.cssText = odd ? oddStyle : evenStyle
td(row, 'B').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'area').style.cssText = odd ? oddStyle : evenStyle
td(row, '3281815517.40').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

row = tr(table)
td(row, 'length').style.cssText = odd ? oddStyle : evenStyle
td(row, '1283380.64563').style.cssText = odd ? oddStyle : evenStyle
odd = !odd

}

if(!first) first = DominantVegetation_switchfunction


    </script>
    <p>
      Please select a feature type:
    </p>
    <form>
      <select id="theswitch" onchange="dotheswitch()">
      </select>
    </form>
    <div id="table"></div>
  </body>
</html>


<?xml version='1.0' encoding='UTF-8'?>
