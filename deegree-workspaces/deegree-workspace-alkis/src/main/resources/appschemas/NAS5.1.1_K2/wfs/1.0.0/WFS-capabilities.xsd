<?xml version="1.0"?>
<xsd:schema targetNamespace="http://www.opengis.net/wfs/capabilities" xmlns:wfsCap="http://www.opengis.net/wfs/capabilities" xmlns:gml="http://www.opengis.net/gml" xmlns:ogcFC="http://www.opengis.net/ogc/filterCapabilities" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<!-- Der Namespace musste geÃ¤ndert werden, da die Definitionen mit denen der Filterspezifikation kollidieren --> 
	<!-- Comments in this document may impose additional constraints
        beyond those codified in the schema syntax.  A conformant
        Web Feature Server must provide Capabilities XML that
           (1) validates against this schema
           (2) does not violate the constraints stated in
               comments herein. -->
	<!-- ==============================================================
        Imports ...
        ============================================================== -->
	<xsd:import namespace="http://www.opengis.net/ogc/filterCapabilities" schemaLocation="../../filter/1.0.0/filterCapabilities.xsd"/>
	<!-- ==============================================================
        Global elements and attributes
        ============================================================== -->
	<!-- A descriptive narrative for more
        information about this server. -->
	<xsd:element name="Abstract" type="xsd:string"/>
	<!-- Elements containing text blocks indicating what 
        fees or access constraints are imposed by the 
        service provider on the service or data retrieved
        from the server. The reserved keyword "NONE" 
        indicates no constraint exists. -->
	<xsd:element name="AccessConstraints" type="xsd:string"/>
	<xsd:element name="Fees" type="xsd:string"/>
	<!-- Short words to help catalog searching.
        Currently, no controlled vocabulary has
        been defined. -->
	<xsd:element name="Keywords" type="xsd:string"/>
	<!-- The top-level HTTP URL of this service. 
        Typically the URL of a "home page" for
        the service.  See also the onlineResource
        attributes of <DCPType> children, below.
        Currently, no non-HTTP platforms have been
        specified. -->
	<xsd:element name="OnlineResource"/>
	<xsd:element name="SRS" type="xsd:string"/>
	<!-- A human-readable title to briefly identify
        this server in menus. -->
	<xsd:element name="Title" type="xsd:string"/>
	<xsd:element name="Query" type="wfsCap:EmptyType"/>
	<xsd:element name="Insert" type="wfsCap:EmptyType"/>
	<xsd:element name="Update" type="wfsCap:EmptyType"/>
	<xsd:element name="Delete" type="wfsCap:EmptyType"/>
	<xsd:element name="Lock" type="wfsCap:EmptyType"/>
	<!-- REDEFINE THIS ELEMENT AS NEEDED IN YOUR XML  -->
	<xsd:element name="VendorSpecificCapabilities" type="xsd:string"/>
	<!-- ==============================================================
        Root element
        ============================================================== -->
	<!-- The parent element of the Capabilities document includes as
        children a Service element with general information about the
        server, a Capability element with specific information about
        the kinds of functionality offered by the server, a FeatureTypeList
        element defining the list of all feature types available from
        this server and a FeatureCapabilities element describing the
        filter capabilities of the server. -->
	<xsd:element name="WFS_Capabilities" type="wfsCap:WFS_CapabilitiesType"/>
	<!-- ==============================================================
        Types
        ============================================================== -->
	<xsd:complexType name="WFS_CapabilitiesType">
		<xsd:sequence>
			<!-- The Service element provides metadata for
              the service as a whole. -->
			<xsd:element name="Service" type="wfsCap:ServiceType"/>
			<!-- A Capability lists available request
              types, how exceptions may be reported, and
              whether any vendor-specific capabilities
              are defined.  It also lists all the
              feature types available from this feature 
              server. -->
			<xsd:element name="Capability" type="wfsCap:CapabilityType"/>
			<xsd:element name="FeatureTypeList" type="wfsCap:FeatureTypeListType"/>
			<xsd:element ref="ogcFC:Filter_Capabilities"/>
		</xsd:sequence>
		<!-- The version attribute specifies the specification revision
           to which this schema applies.  Its format is one,t two or three
           integers separated by periods: "x", or "x.y", or "x.y.z",
           with the most significant number appearing first.  Future
           revisions are guaranteed to be numbered in monotonically
           increasing fashion, though gaps may appear in the sequence. -->
		<xsd:attribute name="version" type="xsd:string" fixed="1.0.0"/>
		<!-- The updateSequence attribute is a sequence number for
           managing propagation of the contents of this document.
           For example, if a Feature Server adds some data feature
           types it can increment the update sequence to inform
           catalog servers that their previously cached versions
           are now stale. The format is a positive integer. -->
		<xsd:attribute name="updateSequence" type="xsd:nonNegativeInteger" default="0"/>
	</xsd:complexType>
	<xsd:complexType name="ServiceType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string"/>
			<xsd:element ref="wfsCap:Title"/>
			<xsd:element ref="wfsCap:Abstract" minOccurs="0"/>
			<xsd:element ref="wfsCap:Keywords" minOccurs="0"/>
			<xsd:element ref="wfsCap:OnlineResource"/>
			<xsd:element ref="wfsCap:Fees" minOccurs="0"/>
			<xsd:element ref="wfsCap:AccessConstraints" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CapabilityType">
		<xsd:sequence>
			<xsd:element name="Request" type="wfsCap:RequestType"/>
			<!-- The optional VendorSpecificCapabilities element lists any
              capabilities unique to a particular server.  Because the
              information is not known a priori, it cannot be constrained
              by this particular schema document.  A vendor-specific schema
              fragment must be supplied at the start of the XML capabilities
              document, after the reference to the general WFS_Capabilities
              schema. -->
			<xsd:element ref="wfsCap:VendorSpecificCapabilities" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FeatureTypeListType">
		<xsd:sequence>
			<xsd:element name="Operations" type="wfsCap:OperationsType" minOccurs="0"/>
			<xsd:element name="FeatureType" type="wfsCap:FeatureTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- Available WFS-defined request types are listed here. At
        least one of the values is required, but more than one
        may be given. -->
	<xsd:complexType name="RequestType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="GetCapabilities" type="wfsCap:GetCapabilitiesType"/>
			<xsd:element name="DescribeFeatureType" type="wfsCap:DescribeFeatureTypeType"/>
			<xsd:element name="Transaction" type="wfsCap:TransactionType"/>
			<xsd:element name="GetFeature" type="wfsCap:GetFeatureTypeType"/>
			<xsd:element name="GetFeatureWithLock" type="wfsCap:GetFeatureTypeType"/>
			<xsd:element name="LockFeature" type="wfsCap:LockFeatureTypeType"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="GetCapabilitiesType">
		<xsd:sequence>
			<xsd:element name="DCPType" type="wfsCap:DCPTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DescribeFeatureTypeType">
		<xsd:sequence>
			<xsd:element name="SchemaDescriptionLanguage" type="wfsCap:SchemaDescriptionLanguageType"/>
			<xsd:element name="DCPType" type="wfsCap:DCPTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TransactionType">
		<xsd:sequence>
			<xsd:element name="DCPType" type="wfsCap:DCPTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetFeatureTypeType">
		<xsd:sequence>
			<xsd:element name="ResultFormat" type="wfsCap:ResultFormatType"/>
			<xsd:element name="DCPType" type="wfsCap:DCPTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LockFeatureTypeType">
		<xsd:sequence>
			<xsd:element name="DCPType" type="wfsCap:DCPTypeType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- Available Distributed Computing Platforms (DCPs) are
        listed here.  At present, only HTTP is defined. -->
	<xsd:complexType name="DCPTypeType">
		<xsd:sequence>
			<xsd:element name="HTTP" type="wfsCap:HTTPType"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- A list of feature types available from
        this server.  The following table
        specifies the number and source of the
        various elements that are available for
        describing a feature type.
   
        element             number    comments
        =================   =======   ======================================
        Name                    1     this is the Name of the feature type
   
        Title                 0/1     an optional Meaningful title for the
                                      feature type  (e.g. "Ontario Roads"
                                      for ROADL_1M")

        Abstract              0/1     optional; no Default
   
        Keywords              0/1     optional; no Default
   
        SRS                     1     the SRS that should be used
                                      when specifying the state of
                                      the feature

        Operations            0/1     a list of available operations for
                                      the feature type
      
        LatLongBoundingBox      1+    bounding box(s) of data
      
        MetadataURL           0/1+    optional; no default
   -->
	<xsd:complexType name="FeatureTypeType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:QName"/>
			<xsd:element ref="wfsCap:Title" minOccurs="0"/>
			<xsd:element ref="wfsCap:Abstract" minOccurs="0"/>
			<xsd:element ref="wfsCap:Keywords" minOccurs="0"/>
			<xsd:element ref="wfsCap:SRS"/>
			<xsd:element name="Operations" type="wfsCap:OperationsType" minOccurs="0"/>
			<xsd:element name="LatLongBoundingBox" type="wfsCap:LatLongBoundingBoxType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="MetadataURL" type="wfsCap:MetadataURLType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="GetType">
		<xsd:attribute name="onlineResource" type="xsd:string" use="required"/>
	</xsd:complexType>
	<!-- Available HTTP request methods. -->
	<xsd:complexType name="HTTPType">
		<xsd:choice maxOccurs="unbounded">
			<!-- HTTP request methods.  The onlineResourc attribute
              indicates the URL prefix for HTTP GET requests
              (everything before the question mark and query string:
              http://hostname[:port]/path/scriptname); for HTTP POST
              requests, onlineResource is the complete URL. -->
			<xsd:element name="Get" type="wfsCap:GetType"/>
			<xsd:element name="Post" type="wfsCap:PostType"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- The LatLongBoundingBox element is used to indicate the edges of 
        an enclosing rectangle in the SRS of the associated feature type.
        Its purpose is to facilitate geographic searches  by indicating
        where instances of the particular feature type exist.  Since multiple
        LatLongBoundingBoxes can be specified, a WFS can indicate where 
        various clusters of data may exist.  This knowledge aids client 
        applications by letting them know where they should query in order 
        to have a high probability of finding data. -->
	<xsd:complexType name="LatLongBoundingBoxType">
		<xsd:attribute name="minx" type="xsd:string" use="required"/>
		<xsd:attribute name="miny" type="xsd:string" use="required"/>
		<xsd:attribute name="maxx" type="xsd:string" use="required"/>
		<xsd:attribute name="maxy" type="xsd:string" use="required"/>
	</xsd:complexType>
	<!-- A Web Feature Server MAY use zero or more MetadataURL
        elements to offer detailed, standardized metadata about
        the data underneath a particular feature type.  The type
        attribute indicates the standard to which the metadata
        complies; the format attribute indicates how the metadata is
        structured.  Two types are defined at present:
        'TC211' = ISO TC211 19115; 
        'FGDC'  = FGDC CSDGM. -->
	<xsd:complexType name="MetadataURLType">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="type" use="required">
					<xsd:simpleType>
						<xsd:restriction base="xsd:NMTOKEN">
							<xsd:enumeration value="TC211"/>
							<xsd:enumeration value="FGDC"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
				<xsd:attribute name="format" use="required">
					<xsd:simpleType>
						<xsd:restriction base="xsd:NMTOKEN">
							<xsd:enumeration value="XML"/>
							<xsd:enumeration value="SGML"/>
							<xsd:enumeration value="TXT"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="OperationsType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element ref="wfsCap:Insert"/>
			<xsd:element ref="wfsCap:Update"/>
			<xsd:element ref="wfsCap:Delete"/>
			<xsd:element ref="wfsCap:Query"/>
			<xsd:element ref="wfsCap:Lock"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="PostType">
		<xsd:attribute name="onlineResource" type="xsd:string" use="required"/>
	</xsd:complexType>
	<!-- The ResultFormatType type defines the output formats that the
        web feature server can generate.  The mandatory format "GML2"
        must always be available.  Individual servers can define
        additional elements representing other output formats. -->
	<xsd:element name="GML2" type="wfsCap:EmptyType"/>
	<xsd:complexType name="ResultFormatType">
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element ref="wfsCap:GML2"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- The SchemaDescriptionLanguageType type defines the schema languages
        that a feature server is capable of using to describe the schema
        of a feature.  Individual servers can define additional elements
        representing other schema languages but XMLSCHEMA must always
        be defined. -->
	<xsd:element name="XMLSCHEMA" type="wfsCap:EmptyType"/>
	<xsd:complexType name="SchemaDescriptionLanguageType">
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element ref="wfsCap:XMLSCHEMA"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="EmptyType"/>
</xsd:schema>
