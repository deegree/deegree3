<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:app="http://www.deegree.org/app" xmlns:deegreewfs="http://www.deegree.org/wfs" xmlns:dgjdbc="http://www.deegree.org/jdbc" xmlns:gml="http://www.opengis.net/gml" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.deegree.org/app">
  <xsd:import namespace="http://www.opengis.net/gml" schemaLocation="http://schemas.opengis.net/gml/3.1.1/base/gml.xsd"/>
  <!-- configuration of the persistence backend to be used -->
  <!-- ====================================================================== -->
  <xsd:element name="Philosopher" substitutionGroup="gml:_Feature" type="app:PhilosopherType">
    
    <!-- annotation of each element (=feature type definition) contains associated table name and gml:id definition -->
  </xsd:element>
  <!-- ====================================================================== -->
  <xsd:complexType name="PhilosopherType">
    <xsd:complexContent>
      <xsd:extension base="gml:AbstractFeatureType">
        <xsd:sequence>
          <!-- simple (integer) valued property 'id' (feature id without prefix) -->
          <xsd:element name="id" type="xsd:integer">
            
          </xsd:element>
          <!-- simple (string) valued property 'name' -->
          <xsd:element name="name" type="xsd:string">
            
          </xsd:element>
          <!-- simple (string) valued property 'sex' -->
          <xsd:element name="sex" type="xsd:string">
            
          </xsd:element>
          <!-- simple (string) valued property 'subject', located in related table -->
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="subject" type="xsd:string">
            
          </xsd:element>
          <!-- complex valued property 'isAuthorOf' -->
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="isAuthorOf" type="gml:FeaturePropertyType">
            
          </xsd:element>
          <!-- simple (date) valued property 'dateOfBirth' -->
          <xsd:element name="dateOfBirth" type="xsd:date">
            
          </xsd:element>
          <!-- complex valued property 'placeOfBirth' -->
          <xsd:element name="placeOfBirth" type="gml:FeaturePropertyType">
            
          </xsd:element>
          <!-- simple (date) valued property 'dateOfDeath' -->
          <xsd:element name="dateOfDeath" type="xsd:date">
            
          </xsd:element>
          <!-- complex valued property 'placeOfDeath' -->
          <xsd:element name="placeOfDeath" type="gml:FeaturePropertyType">
            
          </xsd:element>
          <!-- complex valued property 'friend' (recursive) -->
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="friend" type="gml:FeaturePropertyType">
            
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- ====================================================================== -->
  <xsd:element name="Book" substitutionGroup="gml:_Feature" type="app:BookType">
    
  </xsd:element>
  <!-- ====================================================================== -->
  <xsd:complexType name="BookType">
    <xsd:complexContent>
      <xsd:extension base="gml:AbstractFeatureType">
        <xsd:sequence>
          <!-- simple (string) valued property 'title' -->
          <xsd:element name="title" type="xsd:string">
            
          </xsd:element>
          <!-- simple (date) valued property 'publicationDate' -->
          <xsd:element minOccurs="0" name="publicationDate" type="xsd:date">
            
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- ====================================================================== -->
  <xsd:element name="Place" substitutionGroup="gml:_Feature" type="app:PlaceType">
    
  </xsd:element>
  <!-- ====================================================================== -->
  <xsd:complexType name="PlaceType">
    <xsd:complexContent>
      <xsd:extension base="gml:AbstractFeatureType">
        <xsd:sequence>
          <!-- simple (string) valued property 'name' -->
          <xsd:element name="name" type="xsd:string">
            
          </xsd:element>
          <!-- complex valued property 'country' -->
          <xsd:element minOccurs="0" name="country" type="gml:FeaturePropertyType">
            
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!-- ====================================================================== -->
  <xsd:element name="Country" substitutionGroup="gml:_Feature">
    
    <!-- anonymous (inline) complex type definitions are allowed as well -->
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:extension base="gml:AbstractFeatureType">
          <xsd:sequence>
            <!-- simple (string) valued property 'name' -->
            <xsd:element name="name" type="xsd:string">
              
            </xsd:element>
            <!-- simple (string) valued property 'upperName', mapped to SQL function call -->
            <xsd:element minOccurs="0" name="upperName" type="xsd:string">
              
            </xsd:element>
            <!-- simple (string) valued property 'dataOrigin',  mapped to constant -->
            <xsd:element minOccurs="0" name="dataOrigin" type="xsd:string">
              
            </xsd:element>
            <!-- simple valued property 'area', mapped to SQL function call -->
            <xsd:element minOccurs="0" name="area" type="xsd:float">
              
            </xsd:element>
            <!-- simple valued property 'queryBBOXOverlap', mapped to SQL function call -->
            <xsd:element minOccurs="0" name="queryBBOXOverlap" type="xsd:float">
              
            </xsd:element>
            <!-- geometry property 'geom' -->
            <xsd:element name="geom" type="gml:GeometryPropertyType">
              
            </xsd:element>
          </xsd:sequence>
        </xsd:extension>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ====================================================================== -->
</xsd:schema>